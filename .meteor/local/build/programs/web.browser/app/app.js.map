{"version":3,"sources":["meteor://üíªapp/client/taskInsert/taskInsert.js","meteor://üíªapp/client/taskList/taskList.js","meteor://üíªapp/client/index.js","meteor://üíªapp/models/tasks.js"],"names":["Template","taskInsert","events","e","template","preventDefault","inputTask","$","taskName","val","Meteor","call","taskDate","Date","taskList","helpers","tasks","Tasks","find","dateConvert","moment","format","task","_id","startup","subscribe","Mongo","Collection"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAAA,SAASC,UAAT,CAAoBC,MAApB,CAA4B;AACxB,+BAA6B,UAASC,CAAT,EAAYC,QAAZ,EAAqB;AAC9C;AACAD,MAAEE,cAAF,GAF8C,CAG9C;;AACA,QAAIC,YAAYC,EAAE,OAAF,CAAhB,CAJ8C,CAK9C;;AACA,QAAIC,WAAWF,UAAUG,GAAV,EAAf,CAN8C,CAO9C;AACA;;AACAC,WAAOC,IAAP,CAAY,SAAZ,EAAuB;AAACH,gBAAUA,QAAX;AAAqBI,gBAAU,IAAIC,IAAJ;AAA/B,KAAvB;AACAP,cAAUG,GAAV,CAAc,EAAd;AACH;AAZuB,CAA5B,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAAT,SAASc,QAAT,CAAkBC,OAAlB,CAA0B;AACtB;AACAC,SAAO,YAAW;AACd,WAAOC,MAAMC,IAAN,CAAW,EAAX,CAAP;AACH,GAJqB;AAKtB;AACAC,eAAa,YAAW;AACpB,WAAOC,OAAO,KAAKR,QAAZ,EAAsBS,MAAtB,CAA6B,kBAA7B,CAAP;AACH;AARqB,CAA1B;AAUArB,SAASc,QAAT,CAAkBZ,MAAlB,CAAyB;AACrB;AACA,+BAA6B,UAASC,CAAT,EAAYC,QAAZ,EAAqB;AAC9C,QAAIkB,OAAO,IAAX,CAD8C,CAE9C;AACA;;AACAZ,WAAOC,IAAP,CAAY,YAAZ,EAA0BW,KAAKC,GAA/B;AACH;AAPoB,CAAzB,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVAb,OAAOc,OAAP,CAAe,YAAY;AAEvBd,SAAOe,SAAP,CAAiB,OAAjB;AAEH,CAJD,E;;;;;;;;;;;ACAA;AACAR,QAAQ,IAAIS,MAAMC,UAAV,CAAqB,OAArB,CAAR,C","file":"/app.js","sourcesContent":["Template.taskInsert.events ({\n    \"click button[name=insert]\": function(e, template){\n        //evita refresh padr√£o da p√°gina ao enviar formul√°rio\n        e.preventDefault();\n        //seleciona objeto da DOM que possuir ID task\n        var inputTask = $(\"#task\");\n        //captura o valor do objeto\n        var taskName = inputTask.val();\n        //insere informa√ßa√ß√µes no Mongo\n        //Tasks.insert({taskName: taskName, taskDate: new Date()});\n        Meteor.call(\"addTask\", {taskName: taskName, taskDate: new Date()});\n        inputTask.val(\"\");\n    }\n});\n","Template.taskList.helpers({\n    //Fun√ß√£o tasks retorna Objeto Tasks de acordo com o filtro\n    tasks: function() {\n        return Tasks.find({});\n    },\n    //Fun√ß√£o de lib para formatar data\n    dateConvert: function() {\n        return moment(this.taskDate).format('DD/MM/YYYY HH:mm');\n    }\n});\nTemplate.taskList.events({\n    //remove quando o bot√£o de nome remove for clicado, filtrando por _id\n    \"click button[name=remove]\": function(e, template){\n        var task = this;\n        //remove informa√ß√µes do Mongo\n        //Tasks.remove({_id: task._id});\n        Meteor.call(\"removeTask\", task._id);\n    }\n});\n","Meteor.startup(function () {\n\n    Meteor.subscribe(\"Tasks\");\n\n});\n","//Objeto Tasks = cole√ß√£o Mongo Tasks\nTasks = new Mongo.Collection(\"Tasks\");\n"]}