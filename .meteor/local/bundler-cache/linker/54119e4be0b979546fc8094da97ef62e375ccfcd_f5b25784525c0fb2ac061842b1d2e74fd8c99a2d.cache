[{"type":"js","data":"/* Imports for global scope */\n\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nmoment = Package['momentjs:moment'].moment;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\n_ = Package.underscore._;\nDDP = Package['ddp-client'].DDP;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nTemplate = Package['templating-runtime'].Template;\nmeteorInstall = Package.modules.meteorInstall;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nAutoupdate = Package.autoupdate.Autoupdate;\nReload = Package.reload.Reload;\nHTML = Package.htmljs.HTML;\nSymbol = Package['ecmascript-runtime-client'].Symbol;\nMap = Package['ecmascript-runtime-client'].Map;\nSet = Package['ecmascript-runtime-client'].Set;\n\n","servePath":"/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"client\":{\"header\":{\"template.header.js\":function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                            //\n// client/header/template.header.js                                                                           //\n//                                                                                                            //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                              //\n\nTemplate.__checkName(\"header\");\nTemplate[\"header\"] = new Template(\"Template.header\", (function() {\n  var view = this;\n  return HTML.Raw('<nav class=\"navbar navbar-default\">\\n        <div class=\"navbar-header\">\\n            <a href=\"#\" class=\"navbar-brand\">\\n                Daily-Task\\n            </a>\\n        </div>\\n        <div class=\"navbar-collapse collapse\">\\n            <ul class=\"nav navbar-nav navbar-right\">\\n\\n            </ul>\\n        </div>\\n    </nav>');\n}));\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"taskInsert\":{\"template.taskInsert.js\":function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                            //\n// client/taskInsert/template.taskInsert.js                                                                   //\n//                                                                                                            //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                              //\n\nTemplate.__checkName(\"taskInsert\");\nTemplate[\"taskInsert\"] = new Template(\"Template.taskInsert\", (function() {\n  var view = this;\n  return HTML.Raw('<div class=\"row\">\\n        <div class=\"col-xs-12\">\\n            <form>\\n                <div class=\"form-group\">\\n                    <label for=\"task\">Task</label>\\n                    <input type=\"text\" id=\"task\" class=\"form-control\" placeholder=\"Your task here...\">\\n                </div>\\n                <div class=\"form-group\">\\n                    <button name=\"insert\" type=\"button\" class=\"btn btn-success btn-block\">New task</button>\\n                </div>\\n            </form>\\n        </div>\\n    </div>');\n}));\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"taskInsert.js\":function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                            //\n// client/taskInsert/taskInsert.js                                                                            //\n//                                                                                                            //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                              //\nTemplate.taskInsert.events({\n  \"submit form\": function (e, template) {\n    e.preventDefault();\n    var inputTask = $(\"#task\");\n    var taskName = inputTask.val();\n    Tasks.insert({\n      taskName: taskName,\n      taskDate: new Date()\n    });\n    inputTask.val(\"\");\n  }\n});\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"taskList\":{\"template.taskList.js\":function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                            //\n// client/taskList/template.taskList.js                                                                       //\n//                                                                                                            //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                              //\n\nTemplate.__checkName(\"taskList\");\nTemplate[\"taskList\"] = new Template(\"Template.taskList\", (function() {\n  var view = this;\n  return HTML.DIV({\n    class: \"row\"\n  }, \"\\n        \", HTML.DIV({\n    class: \"col-xs-12\"\n  }, \"\\n            \", HTML.Raw(\"<!--Para cada tasks (função do Helper)-->\"), \"\\n            \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"tasks\"));\n  }, function() {\n    return [ \"\\n            \", HTML.DIV({\n      class: \"row\"\n    }, \"\\n                \", HTML.DIV({\n      class: \"col-xs-11\"\n    }, \"\\n                    \", HTML.Comment(\"Atributo da task\"), \"\\n                    \", Blaze.View(\"lookup:dateConvert\", function() {\n      return Spacebars.mustache(view.lookup(\"dateConvert\"));\n    }), \" - \", Blaze.View(\"lookup:taskName\", function() {\n      return Spacebars.mustache(view.lookup(\"taskName\"));\n    }), \"\\n                \"), \"\\n                \", HTML.DIV({\n      class: \"col-xs-1\"\n    }, \"\\n                    \", HTML.BUTTON({\n      type: \"button\",\n      class: \"btn btn-danger\"\n    }, \"Excluir\"), \"\\n                \"), \"\\n            \"), \"\\n            \", HTML.HR(), \"\\n            \" ];\n  }), \"\\n        \"), \"\\n    \");\n}));\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"taskList.js\":function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                            //\n// client/taskList/taskList.js                                                                                //\n//                                                                                                            //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                              //\nTemplate.taskList.helpers({\n  //Função tasks retorna Objeto Tasks de acordo com o filtro\n  tasks: function () {\n    return Tasks.find({});\n  },\n  dateConvert: function () {\n    return moment(this.taskDate).format('DD/MM/YYYY HH:mm');\n  }\n});\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"template.index.js\":function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                            //\n// client/template.index.js                                                                                   //\n//                                                                                                            //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                              //\n\nTemplate.body.addContent((function() {\n  var view = this;\n  return [ HTML.HEADER({\n    class: \"container\"\n  }, \"\\n        \", Spacebars.include(view.lookupTemplate(\"header\")), \"\\n    \"), \"\\n    \", HTML.MAIN({\n    class: \"container\"\n  }, \"\\n        \", Spacebars.include(view.lookupTemplate(\"taskInsert\")), \"\\n        \", HTML.Raw(\"<!--Chama um Template-->\"), \"\\n        \", Spacebars.include(view.lookupTemplate(\"taskList\")), \"\\n    \") ];\n}));\nMeteor.startup(Template.body.renderToDocument);\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"models\":{\"tasks.js\":function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                            //\n// models/tasks.js                                                                                            //\n//                                                                                                            //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                              //\n//Objeto Tasks = coleção Mongo Tasks\nTasks = new Mongo.Collection(\"Tasks\");\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\",\n    \".html\"\n  ]\n});\nrequire(\"/client/header/template.header.js\");\nrequire(\"/client/taskInsert/template.taskInsert.js\");\nrequire(\"/client/taskList/template.taskList.js\");\nrequire(\"/client/template.index.js\");\nrequire(\"/client/taskInsert/taskInsert.js\");\nrequire(\"/client/taskList/taskList.js\");\nrequire(\"/models/tasks.js\");","servePath":"/app.js","sourceMap":{"version":3,"sources":["client/taskInsert/taskInsert.js","client/taskList/taskList.js","models/tasks.js"],"names":["Template","taskInsert","events","e","template","preventDefault","inputTask","$","taskName","val","Tasks","insert","taskDate","Date","taskList","helpers","tasks","find","dateConvert","moment","format","Mongo","Collection"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAAA,SAASC,UAAT,CAAoBC,MAApB,CAA4B;AACxB,iBAAe,UAASC,CAAT,EAAYC,QAAZ,EAAqB;AAChCD,MAAEE,cAAF;AAEA,QAAIC,YAAYC,EAAE,OAAF,CAAhB;AACA,QAAIC,WAAWF,UAAUG,GAAV,EAAf;AAEAC,UAAMC,MAAN,CAAa;AAACH,gBAAUA,QAAX;AAAqBI,gBAAU,IAAIC,IAAJ;AAA/B,KAAb;AACAP,cAAUG,GAAV,CAAc,EAAd;AACH;AATuB,CAA5B,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAAT,SAASc,QAAT,CAAkBC,OAAlB,CAA0B;AACtB;AACAC,SAAO,YAAW;AACd,WAAON,MAAMO,IAAN,CAAW,EAAX,CAAP;AACH,GAJqB;AAMtBC,eAAa,YAAW;AACpB,WAAOC,OAAO,KAAKP,QAAZ,EAAsBQ,MAAtB,CAA6B,kBAA7B,CAAP;AACH;AARqB,CAA1B,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACAV,QAAQ,IAAIW,MAAMC,UAAV,CAAqB,OAArB,CAAR,C","file":"/app.js","sourcesContent":["Template.taskInsert.events ({\n    \"submit form\": function(e, template){\n        e.preventDefault();\n\n        var inputTask = $(\"#task\");\n        var taskName = inputTask.val();\n\n        Tasks.insert({taskName: taskName, taskDate: new Date()});\n        inputTask.val(\"\");\n    }\n});\n","Template.taskList.helpers({\n    //Função tasks retorna Objeto Tasks de acordo com o filtro\n    tasks: function() {\n        return Tasks.find({});\n    },\n\n    dateConvert: function() {\n        return moment(this.taskDate).format('DD/MM/YYYY HH:mm');\n    }\n});\n","//Objeto Tasks = coleção Mongo Tasks\nTasks = new Mongo.Collection(\"Tasks\");\n"]}}]